on_actions = {
	# country 
	on_new_term_election = {
		effect = {
			country_event = election.5
		}
	}

	# Ace pilots
	# country, FROM = ace
	on_ace_promoted = {
	}

	# country, FROM = ace, PREV = enemy ace 
	# This event fires twice, once for each ace.
	on_aces_killed_each_other = {
	}
	
	# country, FROM = our ace, 
	# PREV = enemy ace, has killed FROM
	on_ace_killed_by_ace = {
	}

	# country, FROM = our ace, 
	# PREV = enemy ace, killed by FROM
	on_ace_killed_other_ace = {
	}

	# country, FROM = ace
	on_ace_killed = {
	}

	# During justifying wargoals
	# triggered daily, so make sure there is a sink somewhere not firing events
	# country, FROM = target nation
	on_justifying_wargoal_pulse = {
		random_events = {
		}
	}

	on_wargoal_expire = {
	}

	on_nuke_drop = {
		random_events = {
			10000 = nuclear.1
		}
	}

	on_border_war_lost = {
		effect = {
		}
	}
	
	on_leave_faction = {
		effect = {
			PREV = {
				add_opinion_modifier = {
					modifier = faction_traitor
					target = ROOT
					days = 365
				}
			
				add_opinion_modifier = {
					modifier = faction_traitor_trade
					target = ROOT
					days = 365
				}
			}
			if = {
			    limit = {
		            PREV = { original_tag = USA }
			    }
			    ROOT = { news_event = factions.2 }
		    }
		}
	}

	#PREV is the one that joins the faction
	on_create_faction = {
		effect = {
		}
	}

	#PREV is country getting invited. #FROM in the add_to_faction effect because that's the scope you should use...
	on_offer_join_faction = {
		effect = {
		}
	}

	#PREV is faction leader on join faction requests.
	on_join_faction = {
		effect = {
			if = {
			    limit = {
		            PREV = { original_tag = USA }
			    }
			    ROOT = { news_event = factions.1 }
		    }
		}
	}

	#FROM is war target
	on_declare_war = {
		effect = {
		}
	}
	
	# When a new faction is formed
	on_faction_formed = {
		effect = {
		}
	}
	
	# ROOT is capitulated country, FROM is winner
	on_capitulation = {
		effect = {
			FROM = {
				add_country_leader_trait = won_a_war 
			}
		}
	}

	on_government_change = {
		effect = {
			ROOT = {
				update_coalition = yes
			}
		}
	}

	on_coup_succeeded = {
		effect = {
			random_other_country = {
				limit = {
					NOT = { tag = ROOT }
					original_tag = ROOT
				}
				quickset_coalition_flags_only = yes
				add_ideas = violent_non_state_actor
			}
		}
	}

	#ROOT is winner #FROM gets annexed
	on_civil_war_end = {
		effect = {
			ROOT = {
				add_ideas = one_party_state
			}
		}
	}

	#Not run on a specific country.
	on_startup = {
		effect = {
			add_to_variable = { global.next_month = 1 }
			every_country = {
				limit = {
					NOT = { has_country_flag = has_parliament }
				}
				quickset_coalition_flags_only = yes
			}
			every_country = {
				limit = {
					has_country_flag = catholic
					NOT = { original_tag = VAT }
				}
				add_opinion_modifier = {
					target = VAT
					modifier = leader_of_the_catholic_church
				}
			}
			every_country = {
				limit = {
					NOT = { original_tag = ISS }
				}
				add_opinion_modifier = {
					target = ISS
					modifier = rival
				}
			}
			every_country = {
				limit = {
					has_idea = idea_european_union_member
				}
				every_other_country = {
					limit = {
						has_idea = idea_european_union_member
					}
					add_opinion_modifier = {
						target = PREV
						modifier = european_union_member
					}
					add_opinion_modifier = {
						target = PREV
						modifier = european_union_member_trade
					}
				}
			}
			every_country = {
				limit = {
					has_idea = idea_african_union_member
				}
				every_other_country = {
					limit = {
						has_idea = idea_african_union_member
					}
					add_opinion_modifier = {
						target = PREV
						modifier = african_union_member
					}
				}
			}
			every_country = {
				limit = {
					has_idea = idea_commonwealth_of_nations_member
				}
				every_other_country = {
					limit = {
						has_idea = idea_commonwealth_of_nations_member
					}
					add_opinion_modifier = {
						target = PREV
						modifier = commonwealth_of_nations_member
					}
				}
			}
			every_country = {
				limit = {
					has_idea = idea_baltic_assembly_member
				}
				every_other_country = {
					limit = {
						has_idea = idea_baltic_assembly_member
					}
					add_opinion_modifier = {
						target = PREV
						modifier = baltic_assembly_member
					}
				}
			}
			every_country = {
				limit = {
					has_idea = idea_benelux_union_member
				}
				every_other_country = {
					limit = {
						has_idea = idea_benelux_union_member
					}
					add_opinion_modifier = {
						target = PREV
						modifier = benelux_union_member
					}
				}
			}
			every_country = {
				limit = {
					has_idea = idea_east_african_community_member
				}
				every_other_country = {
					limit = {
						has_idea = idea_east_african_community_member
					}
					add_opinion_modifier = {
						target = PREV
						modifier = east_african_community_member
					}
				}
			}
			every_country = {
				limit = {
					has_idea = idea_nordic_council_member
				}
				every_other_country = {
					limit = {
						has_idea = idea_nordic_council_member
					}
					add_opinion_modifier = {
						target = PREV
						modifier = nordic_council_member
					}
				}
			}
			if = {
				limit = {
					NOT = {
						has_dlc = "Together for Victory"
					}
				}
				every_country = {
					limit = {
						has_country_flag = TfV_marked_for_deletion
					}
					country_event = system.28
				}
			}
			every_state = {
				limit = {
					state_population < 2
				}
				set_state_flag = uninhabited_state
			}
			every_country = {
				country_event = economy.1
				country_event = system.1
				country_event = system.20
				country_event = system.21
			}
			USA = { 
				add_nuclear_bombs = 6185 
				if = {
					limit = {
						date < 2019.1.1
					}
					country_event = {
						id = system.34
						days = 309
					}
				}
			}
			RUS = { add_nuclear_bombs = 6490 }
			FRA = { add_nuclear_bombs = 300 }
			PRC = { add_nuclear_bombs = 280 }
			ENG = { add_nuclear_bombs = 215 }
			PAK = { add_nuclear_bombs = 150 }
			RAJ = { add_nuclear_bombs = 130 }
			ISR = { add_nuclear_bombs = 80 }
			PRK = { add_nuclear_bombs = 20 }
		}
	}
	
	on_daily = {
		#
	}

	on_weekly = {
		effect = {
			if = {
				limit = { 
					has_intelligence_agency = yes
					is_ai = yes
				}
				update_operation_ai = yes
			}
		}
	}

	on_monthly = {
		effect = {
			country_event = economy.2
			country_event = system.21
		}
	}
	
	on_unit_leader_level_up = {
		effect = {
			
		}
	}
	
	# From is owner country
	on_army_leader_daily = {
		effect = {
		}
	}
	
	# From is owner country
	on_army_leader_won_combat = {
		effect = {
		}
	}
	
	# From is owner country
	on_army_leader_lost_combat = {
		effect = {
		}
	}
	
	on_army_leader_promoted = {
		effect = {
			add_timed_unit_leader_trait = {
				trait = recently_promoted
				days = 100
			}
		}
	}

	# Scope is the country owner of the PotF, FROM is the country of the killer
	on_pride_of_the_fleet_sunk = {
	}

	#ROOT = nation being released, FROM = overlord
	on_release_as_puppet = {
		effect = {
            ROOT = {
				if = {
					limit = {
						NOT = {
							has_idea = violent_non_state_actor
						}
					}
					release_idea_transfer = yes
				}
				add_political_power = 100
				quickset_parliament = yes 
				quickset_coalition = yes 
				add_ideas = non_member_state 
				country_event = system.20
				inherit_technology = FROM
				if = {
					limit = {
						has_dlc = "Together for Victory"
					}
					FROM = {
						country_event = subject.7
					}
				}
				economy_setup = yes
			}
		}
	}

	#ROOT is free nation FROM is releaser
	on_release_as_free = {
		effect = {
			if = {
				limit = {
					ROOT = { has_country_flag = has_parliament }
				}
				ROOT = { 	
					set_parliament_graphics = yes
				}
				else = {
					ROOT = { quickset_parliament = yes quickset_coalition = yes }
				}
			}
			ROOT = { 
				if = {
					limit = {
						NOT = {
							has_idea = violent_non_state_actor
						}
					}
					release_idea_transfer = yes
				}
				add_political_power = 100
				add_ideas = non_member_state 
				country_event = system.20 
				inherit_technology = FROM
				economy_setup = yes
			}
		}
	}

	#ROOT = nation being puppeted, FROM = overlord
	on_puppet = {
		effect = {
		    ROOT = { break_coalition = yes quickset_coalition = yes }
			puppet_government_sync = yes
			puppet_ideology_cleanup = yes
		}
	}

	on_unit_leader_created = {
		effect = {
		}
	} 

	on_government_exiled = {
		effect = {
		}
	}

	#Root is exile
	#From is old host
	on_exile_government_reinstated = {
		effect = {
			From = {
				every_army_leader = {
					limit = { is_exiled_leader_from = Root }
					set_nationality = Root
				}
			}
			Root = {
				every_army_leader = {
					limit = { is_exiled_leader_from = Root }
					remove_exile_tag = yes
				}
			}
		}
	}

	#Root is exile
	#From is new host
	#FromFrom is old host
	on_host_changed_from_capitulation = {
		effect = {
			#Transfer exile leaders to new host
			From.From = {
				every_army_leader = {
					limit = { is_exiled_leader_from = Root }
					set_nationality = Root.From
				}
			}
		}
	}

	#THIS is country that has just gotten into a war
	on_war = {
	
	}

	#ROOT is new controller #FROM is old controller #FROM.FROM is state ID
	on_state_control_changed = {
		effect = {
			FROM.FROM = {
				clear_state_government_flags = yes
			}
		}
	}

	#ROOT is winner #FROM gets annexed - This fires just before FROM gets annexed, meaning the country and everything it owns still exists. It will also fire on_annex and on_civil_war_end
	on_civil_war_end_before_annexation = {
		effect = {
		
		}
	}

	# called a country fully decrypts cipher of a target country
	# scope is the target country that its cipher is decrypted
	# from scope is the decrypter country
	on_fully_decrypted_cipher = {

	}

	# called when a country activates its active cipher bonuses against a target
	# scope is the target country
	# from scope is the country that activates its bonuses
	on_activated_active_decryption_bonuses = {

	}

	# called when a country send volunteers to another
	# ROOT is sender, FROM is receiver
	on_send_volunteers = {
		effect = {
		
		}
	}

	on_operative_on_mission_spotted = {

		effect = {
            # SCOPE  the operative
            # ROOT   the country the operative was performing its mission in
            # FROM   the country the operative is operating for

            set_temp_variable = {
                var = capture_chance
                value = 90
            }
            set_temp_variable = {
                var = kill_chance
                value = 10
            }			

            if = {
                limit = {
                    OR = {
                        operative_leader_mission = control_trade
                        operative_leader_mission = diplomatic_pressure
                    }
                }
                set_temp_variable = {
                    var = kill_chance
                    value = 0
                }
            }

            random_list = {
                temp_var:capture_chance = {
                   	capture_operative = {
                   	    captured_by = ROOT
                   	}  	
                }
                temp_var:kill_chance = {
                    kill_operative = {
                        killed_by = ROOT
                    }
                }
            }
        }
    }

	on_operative_captured = {
		effect = {
			# SCOPE  the operative
			# ROOT   the country the operative was performing its mission in
			# FROM   the country the operative is operating for

			if = {
				limit = {
					NOT = { has_unit_leader_flag = le_clerc1 }
				}
				set_unit_leader_flag = le_clerc1
			}
			else_if = {
				limit = {
					has_unit_leader_flag = le_clerc1
				}
				set_unit_leader_flag = le_clerc2
			}

			random_list = {
				90 = {
					operative_leader_event = {
						id = lar_operative_event.1
						set_from_from = ROOT
					}
				}
				10 = {
					modifier = {
						has_trait = operative_tough
						factor = 0
					}
					modifier = {
						has_trait = operative_double_agent
						factor = 0
					}
					turn_operative = { turned_by = ROOT }
					add_nationality = FROM
					operative_leader_event = {
            	    	id = lar_operative_event.5
						set_from_from = FROM
            		}
            	}
           }
		}
	}

	on_operative_death = {
		effect = {
			# SCOPE  the operative
			# ROOT   the killer country (optional)
			# FROM   the country the operative is operating for

			if = {
				limit = {
					country_exists = ROOT
				}
				operative_leader_event = {
					id = lar_operative_event.3
					set_from_from = ROOT
				}
			}
		}
	}

	on_operative_detected_during_operation = {
		effect = {
			random_list = {
				40 = {
					force_operative_leader_into_hiding = 45
					operative_leader_event = {
						id = lar_operative_event.2
						set_from_from = FROM
					}
				}
				35 = {
					capture_operative = {
						captured_by = FROM
					}
				}
				20 = {
					harm_operative_leader = 90
					operative_leader_event = {
						id = lar_operative_event.4
						set_from_from = FROM
					}
				}
				5 = {
					kill_operative = {
						killed_by = FROM
					}
				}
			}
		}
	}

	on_operation_completed = {
		effect = {
			# THIS: the operation
			# ROOT: the initiating country
			# FROM: the target country
			
			if = {
				limit = {
					ROOT = { has_country_flag = just_freed_operative_flag }
				}
				every_operative = {
					if = {
						limit = {
							NOT = { has_trait = operative_escape_artist }
						}
						random = {
							chance = 15
							add_unit_leader_trait = operative_escape_artist
						}
					}
				}
				ROOT = { clr_country_flag = just_freed_operative_flag }
			}
			every_operative = {
				if = {
					limit = {
						has_trait = operative_linguist
						NOT = { operative_leader_mission = no_mission }
						NOT = { has_nationality = FROM }
					}
					random = {
						chance = 20
						add_nationality = FROM
					}
				}
			}
		}
	}
}
